#################################################
# dein.toml                                     #
#                   dein plugin maneger setting #
#################################################
# templete
# [[plugins]]
# lazy = 1
# repo = ''
# depends = ['']
# on_xxxxx = 
# hook_xxxxx = ''''''

[[plugins]]
lazy = 0
repo = 'Shougo/dein.vim'

[[plugins]]
lazy = 1
repo = 'tomasr/molokai'
on_event = 'VimEnter'
hook_post_source = '''colorscheme molokai'''

[[plugins]]
lazy = 1
repo = 'vim-denops/denops.vim'
hook_source = '''
	if executable(expand('~/.programs/deno/deno')) != 0
		let g:denops#deno = expand('~/.programs/deno/deno')
	endif
	
'''

# ddc
[[plugins]]
lazy = 1
repo = 'Shougo/ddc.vim'
depends = ['denops.vim','ddc-ui-pum']
on_event = 'VimEnter'
hook_post_source = '''
	call ddc#custom#patch_global('ui', 'pum')
	"call ddc#custom#patch_global('ui', 'native')
	call ddc#custom#patch_global('sources', ['vim-lsp'])
	call ddc#custom#patch_global('sourceOptions', {
	\	'_': {
	\		'matchers': ['matcher_head','matcher_length'],
	\		'sorters': ['sorter_rank'],
	\		'converters': ['converter_remove_overlap']},
	\	'vim-lsp': {
	\		'mark': 'L',
	\		'matchers': ['matcher_head','matcher_length'],
	\		'sorters': ['sorter_rank']},
	\	})
	call ddc#custom#patch_global('sourceParams', {
	\	'around' : {'maxSize': 500}
	\	})
	call ddc#custom#patch_filetype(['css'], {
	\	'sourceParams': {
	\		'vim-lsp': {
	\				'ignoreCompleteProvider': v:true,
	\			},
	\		},
	\	})
	call ddc#enable()
'''
## ddc ui
### neovim native
[[plugins]]
lazy = 1
repo = 'Shougo/ddc-ui-native'
depends = ['ddc.vim','denops.vim']
on_source = ['ddc.vim']
### pum.vim
[[plugins]]
lazy = 1
repo = 'Shougo/ddc-ui-pum'
depends = ['ddc.vim','pum.vim']
on_source = ['ddc.vim']
[[plugins]]
lazy = 1
repo = 'Shougo/pum.vim'
on_source = ['ddc-ui-pum']
hook_source = '''
	inoremap <silent><expr> <TAB>   pum#visible() ? '<Cmd>call pum#map#select_relative(+1)<CR>' : '<TAB>'
	inoremap <silent><expr> <S-TAB> pum#visible() ? '<Cmd>call pum#map#select_relative(-1)<CR>' : '<S-TAB>'
	inoremap <silent><expr> <ESC>   pum#visible() ? '<Cmd>call pum#map#cancel()<CR>' : '<ESC>'
	inoremap <silent><expr> <CR>    pum#visible() ? '<Cmd>call pum#map#confirm()<CR>' : '<CR>'
'''
## ddc sources
### ddc-around
[[plugins]]
lazy = 1
repo = 'Shougo/ddc-around'
on_source = ['ddc.vim']
### ddc-vim-lsp
[[plugins]]
lazy = 1
repo = 'shun/ddc-vim-lsp'
depends = ['ddc.vim','vim-lsp-settings','denops.vim']
on_source = ['ddc.vim']
[[plugins]]
lazy = 1
repo = 'prabirshrestha/vim-lsp'
on_event = 'VimEnter'

[[plugins]]
lazy = 1
repo = 'mattn/vim-lsp-settings'
depends = ['vim-lsp']
on_source = ['vim-lsp']
hook_source = '''
	let g:lsp_settings_servers_dir = expand(g:vim_dir . '/lss')
	let g:lsp_settings_global_settings_dir = expand(g:vim_dir . '/lss')
	"let g:lsp_settings = {}
'''
## ddc matchers
[[plugins]]
lazy = 1
repo = 'Shougo/ddc-matcher_head'
depends = ['ddc.vim']
on_source = ['ddc.vim']
[[plugins]]
lazy = 1
repo = 'Shougo/ddc-matcher_length'
depends = ['ddc.vim']
on_source = ['ddc.vim']
## ddc sorters
[[plugins]]
lazy = 1
repo = 'Shougo/ddc-sorter_rank'
depends = ['ddc.vim']
on_source = ['ddc.vim']
## ddc converters
[[plugins]]
lazy = 1
repo = 'Shougo/ddc-converter_remove_overlap'
depends = ['ddc.vim']
on_source = ['ddc.vim']
